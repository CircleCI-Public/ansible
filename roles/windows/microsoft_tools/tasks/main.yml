- name: Install dotnet sdk 6
  win_chocolatey:
    name: dotnet-6.0-sdk
    state: '{{ package_state }}'
    version: '{{ dotnet_sdk_version_6 }}'
    force: yes

- name: Install dotnet sdk 7
  win_chocolatey:
    name: dotnet-7.0-sdk
    state: '{{ package_state }}'
    version: '{{ dotnet_sdk_version_7 }}'
    force: yes

- name: Install netcore-sdk2-2
  win_chocolatey:
    name: dotnetcore-sdk
    state: '{{ package_state }}'
    version: '{{ netcore_sdk2_2_version }}'
    force: yes
  when: '"OS Name:                   Microsoft Windows Server 2019 Datacenter" in win_version.output'

- name: Install dotnet-sdk5-0
  win_chocolatey:
    name: dotnet-5.0-sdk
    state: '{{ package_state }}'
    version: '{{ dotnet_sdk_version_5 }}'
    force: yes
  when: '"OS Name:                   Microsoft Windows Server 2019 Datacenter" in win_version.output'

#- name: Install Sql Server Developer Edition
#  win_chocolatey:
#    name: sql-server-2019
#    state: '{{ package_state }}'
#    package_params: '"/ACTION:INSTALL /IACCEPTSQLSERVERLICENSETERMS /SQLSYSADMINACCOUNTS:{{ ansible_env.COMPUTERNAME }}\\circleci /INSTANCEID:MSSQLSERVER /INSTANCENAME:MSSQLSERVER /UPDATEENABLED:FALSE /SECURITYMODE:SQL /SAPWD:circleci /QUIET"'
#    version: '{{ sqlserver_devedition_version }}'


- name: Install Visual Studio 2022 Community Edition
  win_chocolatey:
    name: visualstudio2022community
    state: '{{ package_state }}'
    package_params: '--allWorkloads --includeRecommended --includeOptional --quiet --locale en-US'
    timeout: 5400
    version: '{{ visualstudio_community_edition_version }}'
    force: yes
  when: '"OS Name:                   Microsoft Windows Server 2022 Datacenter" in win_version.output'

- name: Install Visual Studio 2022 Build Tools
  win_chocolatey:
    name: visualstudio2022buildtools
    state: '{{ package_state }}'
    package_params: '--allWorkloads --includeRecommended --includeOptional --quiet --locale en-US'
    version: '{{ visualstudio_buildtools_version }}'
    force: yes
  when: '"OS Name:                   Microsoft Windows Server 2022 Datacenter" in win_version.output'

- name: Ensure that msbuild is in the path
  ansible.windows.win_path:
    elements:
    - 'C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin'
  when: '"OS Name:                   Microsoft Windows Server 2022 Datacenter" in win_version.output'

- name: Install Visual Studio 2019 Community Edition
  win_chocolatey:
    name: visualstudio2019community
    state: '{{ package_state }}'
    package_params: '--allWorkloads --remove Microsoft.VisualStudio.Component.Azure.Storage.AzCopy --includeRecommended --includeOptional --quiet --locale en-US'
    timeout: 12000
    version: '{{ visualstudio_community_edition_version }}'
    force: yes
  when: '"OS Name:                   Microsoft Windows Server 2019 Datacenter" in win_version.output'

- name: Install Visual Studio 2019 Build Tools
  win_chocolatey:
    name: visualstudio2019buildtools
    state: '{{ package_state }}'
    package_params: '--allWorkloads --remove Microsoft.VisualStudio.Component.Azure.Storage.AzCopy --includeRecommended --includeOptional --quiet --locale en-US'
    version: '{{ visualstudio_buildtools_version }}'
    force: yes
  when: '"OS Name:                   Microsoft Windows Server 2019 Datacenter" in win_version.output'

- name: Ensure that msbuild is in the path
  ansible.windows.win_path:
    elements:
    - 'C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin'
  when: '"OS Name:                   Microsoft Windows Server 2019 Datacenter" in win_version.output'

- name: Ensure microsoft default java is not on path
  ansible.windows.win_path:
    elements:
      - 'C:\Program Files\Microsoft\jdk-11.0.16.101-hotspot\bin'
    state: absent

- name: Install Nuget command line interface
  win_chocolatey:
    name: nuget.commandline
    state: '{{ package_state }}'
    version: '{{ nuget_cli_version }}'
    force: yes

- name: Install Windows Application Driver
  win_chocolatey:
    name: winappdriver
    state: '{{ package_state }}'
    version: '{{ winappdriver_version }}'
    force: yes

- name: Disable Visual Studio background downloads
  win_regedit:
    path: HKLM:\Software\Microsoft\VisualStudio\Setup
    name: BackgroundDownloadDisabled
    data: 00000001
    type: dword
    state: present

# - name: Disable Visual Studio Update
# win_regedit:
#    path: HKLM:\Policies\Microsoft\VisualStudio
#    name: SQM
#    data: 0
#    type: dword
#    state: present

- name: Enable Windows Development Mode
  win_regedit:
    path: HKLM:\Software\Microsoft\Windows\CurrentVersion\AppModelUnlock
    name: AllowDevelopmentWithoutDevLicense
    data: 1
    type: dword
    state: present

- name: Enable Sideloading
  win_regedit:
    path: HKLM:\Software\Microsoft\Windows\CurrentVersion\AppModelUnlock
    name: AllowAllTrustedApps
    data: 1
    type: dword
    state: present

- name: Reboot the machine
  ansible.windows.win_reboot:
