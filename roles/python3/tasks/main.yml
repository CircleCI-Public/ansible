---
- block:
    - name: Create /opt/circleci/.pyenv directory
      ansible.builtin.file:
        path: "{{ pyenv_dir }}"
        owner: "{{ circleci_user }}"
        group: "{{ circleci_user }}"
        state: directory

    - name: Install pyenv dependencies
      ansible.builtin.apt:
        pkg:
          - libbz2-dev
          - libreadline-dev
          - libssl-dev
          - libsqlite3-dev
          - llvm
          - make
          - wget
          # may not need these
          - curl
          - libncurses5-dev
          - liblzma-dev
          - zlib1g-dev
          - python3-pip
        force_apt_get: yes
        force: yes
        state: latest
        update_cache: yes

  become: true

- name: Clone and checkout pyenv version
  become: true
  become_user: "{{ circleci_user }}"
  become_method: sudo
  environment:
    TMPDIR: "{{ pyenv_dir }}/tmp"
  ansible.builtin.git:
    repo: "https://github.com/yyuu/pyenv.git"
    dest: "{{ pyenv_dir }}"
    single_branch: yes
    version: "{{ pyenv_version }}"

- block:
    - name: Configure pyenv
      ansible.builtin.blockinfile:
        path: "{{ circleci_home }}/.circlerc"
        marker_begin: "PYTHON START"
        marker_end: "PYTHON END"
        block: |
          export PYENV_ROOT="{{ pyenv_dir }}"
          export PATH=$PYENV_ROOT/bin:$PATH
          export PATH=$PYENV_ROOT/shims:$PATH
          eval "$(pyenv init --path)"
          eval "$(pyenv init -)"

    - name: Set pyenv global versions
      ansible.builtin.shell: "sudo -H -i -u {{ circleci_user }} | {{ item }}"
      args:
        executable: /bin/bash
      with_items: "{{ pyenv_global_versions }}"

    - name: Set pyenv items
      ansible.builtin.shell: "sudo -H -i -u {{ circleci_user }} | {{ item }}"
      args:
        executable: /bin/bash
      with_items: "{{ pyenv_items }}"

  become: true
