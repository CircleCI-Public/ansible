- name: Install nunit-console-runner
  win_chocolatey:
    name: nunit-console-runner
    state: '{{ package_state }}'
    version: '{{ nunit_console_runner_version }}'

- name: Install nano
  win_chocolatey:
    name: nano
    state: '{{ package_state }}'
    version: '{{ nano_version }}'

- name: Install vim
  win_chocolatey:
    name: vim
    state: '{{ package_state }}'
    version: '{{ vim_version }}'

- name: Install jq
  win_chocolatey:
    name: jq
    state: '{{ package_state }}'
    version: '{{ jq_version }}'

- name: Install golang
  win_chocolatey:
    name: golang
    state: '{{ package_state }}'
    version: '{{ golang_version }}'

- name: Install openjdk (java)
  win_chocolatey:
    name: openjdk
    state: '{{ package_state }}'
    version: '{{ openjdk_version }}'

- name: Install python 2.x
  win_chocolatey:
    name: python
    state: '{{ package_state }}'
    version: '{{ python_2_version }}'
    allow_multiple: yes

- name: Install python 3.x
  win_chocolatey:
    name: python
    state: '{{ package_state }}'
    version: '{{ python_3_version }}'
    allow_multiple: yes

- name: Install miniconda3
  win_chocolatey:
    name: miniconda3
    package_params: '"/AddToPath:1"'
    state: '{{ package_state }}'
    version: '{{ miniconda3_version }}'

- name: Install nodejs
  win_chocolatey:
    name: nodejs
    state: '{{ package_state }}'
    version: '{{ nodejs_version }}'

- name: Install ruby
  win_chocolatey:
    name: ruby
    state: '{{ package_state }}'
    version: '{{ ruby_version }}'

- name: Install docker desktop
  win_chocolatey:
    name: docker-desktop
    state: '{{ package_state }}'
    version: '{{ docker_version }}'
  register: docker_install_response

- name: Reboot when the docker-desktop install requires it
  ansible.windows.win_reboot:
  when: docker_install_response.reboot_required